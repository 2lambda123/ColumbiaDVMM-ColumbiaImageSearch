version: "3"

services:

  img_processor:
    image: svebork/columbia_image_search:1.0
    hostname: ${extr_conf_name}
    stdin_open: true
    tty: true
    cap_add:
      - IPC_LOCK
    environment:
      # General environment variables
      # These two parameters are a bit confusing
      - input_type
      - image_ingestion_type
      - update_ingestion_type
      - verbose
      - "conf_name=${extr_conf_name}"
      - extr_type
      - extr_nb_threads
      # Kafka related environment variables
      - kafka_servers
      - kafka_security
      - images_topic
      - updates_topic
      - images_consumer_group
      - updates_consumer_group
      # Kinesis related environment variables
      - images_stream
      - updates_stream
      - create_stream
      - region_name
      - aws_profile
      # Hbase related environment variables
      - hbase_host
      # In
      - in_table_sha1infos
      - in_image_buffer_column_family
      - in_image_buffer_column_name
      - in_image_info_column_family
      - in_image_url_column_name
      - in_extr_column_family
      # Out
      - table_sha1infos
      - table_updateinfos
      - batch_update_size
      - image_info_column_family
      - image_url_column_name
      - image_buffer_column_family
      - image_buffer_column_name
      - extr_column_family
      - skip_failed
    # nothing really needs to be persistent here. no other volumes needed
    volumes:
      - $repo_path:$indocker_repo_path
      - cuimgsearch-proc-volume:/data
      # AWS for Kinesis
      - $repo_path/conf/aws_credentials/:/home/ubuntu/.aws/
    command: ["bash", "-c", "mkdir ${indocker_repo_path}/conf/generated/ || true && python ${indocker_repo_path}/setup/ConfGenerator/create_conf_extractor.py -o ${indocker_repo_path}/conf/generated/ && bash ${indocker_repo_path}/scripts/run_processing.sh -c ${extr_conf_name} -r ${indocker_repo_path}"]
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "20"


volumes:
  cuimgsearch-proc-volume:

